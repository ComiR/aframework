/**
 * Underlined
 * Makes element underlined and removes on :hover
 */
$underlined {
	text-decoration: underline;
}

$underlined:hover {
	text-decoration: none;
}

/**
 * Not Underlined
 * Makes element not underlined and removes on :hover
 */
$not-underlined {
	text-decoration: none;
}

$not-underlined:hover {
	text-decoration: underline;
}

/**
 * Numeric definition list
 */
$numeric-definition {
	margin-left: 0;
	padding-left: 0;
}

	$numeric-definition dt {
		counter-reset: i;
	}

	$numeric-definition dd + dd, 
	$numeric-definition dd ~ dd:not(:last-child) {
		counter-increment: i;
	}

	$numeric-definition dd + dd:before, 
	$numeric-definition dd ~ dd:not(:last-child):before {
		content: "(" counter(i) ") ";
	}

/**
 * Data Definition List
 * Used on DLs to turn them into Key: Val
 * Bold key with : after
 */
$data-definition {
	margin-left: 0;
	padding-left: 0;
}

	$data-definition dt {
		float: left;
		clear: left;
		font-weight: bold;
		margin: 0 5px 5px 0;
	}

	$data-definition dt:after {
		content: ": ";
	}

	$data-definition dd {
		margin: 0 0 5px;
	}

/**
 * Pipe Menu
 * Turns a UL into foo | bar | zaz
 */
$pipe-menu {
	margin-left: 0;
	padding-left: 0;
	list-style-type: none;
}

	$pipe-menu li {
		display: inline;
	}

	$pipe-menu li:after {
		content: " | ";
	}

	$pipe-menu li:last-child:after {
		content: "";
	}	

/**
 * Dash Menu
 * Turns a UL into foo - bar - zaz
 */
$dash-menu {
	margin-left: 0;
	padding-left: 0;
	list-style-type: none;
}

	$dash-menu li {
		display: inline;
	}

	$dash-menu li:after {
		content: " - ";
	}

	$dash-menu li:last-child:after {
		content: "";
	}

/**
 * Inline menu
 * Turns a UL into foo bar baz
 */
$inline-menu {
	margin-left: 0;
	padding-left: 0;
	list-style-type: none;
}

	$inline-menu li {
		display: inline;
	}

/**
 * Pagination
 */
$pagination {
	margin-left: 0;
	list-style: none;
	text-align: center;
}

	$pagination li {
		display: inline;
	}

	$pagination li:after {
		content: " | ";
	}

	$pagination li:last-child:after {
		content: "";
	}

		$pagination li:first-child a:before {
			content: "< ";
		}

		$pagination li:last-child a:after {
			content: " >";
		}

/**
 * Previous/Next Menu
 * Turns a UL with 2 LIs into < prev | next >
 * (Should add support for $constant = $constant)
 * (to avoid duplicate self-clear-styling)
 */
$previous-next-menu {
	_height: 1%;
	*display: inline-block;
	_display: block;
}

$previous-next-menu:after {
	content: ".";
	display: block;
	height: 0;
	visibility: hidden;
	clear: both;
}

$previous-next-menu {
	margin-left: 0;
	list-style-type: none;
}

	$previous-next-menu li {
		float: right;
	}

	$previous-next-menu li:first-child {
		float: left;
	}

		$previous-next-menu li a:after {
			content: " >";
		}

		$previous-next-menu li:first-child a:after {
			content: "";
		}

		$previous-next-menu li:first-child a:before {
			content: "< ";
		}

/**
 * Arrow-list
 * 
 */
$arrow-list {
	margin-left: 0;
	list-style: none;
}

	$arrow-list li {
		margin-bottom: 5px;
	}

	$arrow-list li:before {
		content: "> ";
		font-size: 8px;
	}	

/**
 * Dash-list
 * 
 */
$dash-list {
	margin-left: 0;
	list-style: none;
}

	$dash-list li {
		margin-bottom: 5px;
	}

	$dash-list li:before {
		content: "- ";
		font-size: 8px;
	}

/**
 * Self Clear
 * Classic self-clear
 */
$self-clear {
	_height: 1%;
	*display: inline-block;
	_display: block;
}

$self-clear:after {
	content: ".";
	display: block;
	height: 0;
	visibility: hidden;
	clear: both;
}
